@import url(https://fonts.googleapis.com/css?family=Roboto|Ubuntu);h1 {
  font-family: "Ubuntu" !important;
  font-size: 72px !important;
}

h2 {
  font-family: "Ubuntu" !important;
  font-size: 48px;
}

h3 {
  font-family: "Ubuntu" !important;
  font-size: 36px;
}

h4 {
  font-family: "Ubuntu" !important;
  font-size: 24px !important;
  font-weight: 200;
}

h5 {
  font-family: "Ubuntu" !important;
  font-size: 18px !important;
  text-transform: uppercase;
  color: #827c78;
}

th {
  font-size: 12px;
  text-transform: uppercase;
}

td {
  font-size: 12px;
}

p {
  font-family: "Roboto" !important;
  font-size: 14px;
  font-weight: 200 !important;
}

p.light {
  font-family: "Roboto" !important;
  font-weight: 100;
}

#app a {
  color: #9fcecc;
  text-decoration: underline;
}

label {
  font-size: 14px !important;
  font-family: "Roboto" !important;
  font-weight: 200 !important;
}

button {
  font-family: "Roboto" !important;
  border: #9fcecc solid 3px !important;
  background: transparent !important;
  color: #9fcecc !important;
  text-transform: uppercase;
  border-radius: 0 !important;
  font-size: 14px !important;
  font-weight: bold !important;
}

button.clear {
  border: transparent !important;
}

html {
  box-sizing: border-box;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #1565c0;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Ubuntu";
  font-size: 1em;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.75em 1.5em;
  text-align: center;
  text-decoration: none;
  -webkit-transition: background-color 150ms ease;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

button:hover,
button:focus,
input[type="button"]:hover,
input[type="button"]:focus,
input[type="reset"]:hover,
input[type="reset"]:focus,
input[type="submit"]:hover,
input[type="submit"]:focus {
  background-color: #11519a;
  color: #fff;
}

button:disabled,
input[type="button"]:disabled,
input[type="reset"]:disabled,
input[type="submit"]:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

button:disabled:hover,
input[type="button"]:disabled:hover,
input[type="reset"]:disabled:hover,
input[type="submit"]:disabled:hover {
  background-color: #1565c0;
}

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0;
}

legend {
  font-weight: 600;
  margin-bottom: 0.375em;
  padding: 0;
}

label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.375em;
}

input,
select,
textarea {
  display: block;
  font-family: "Ubuntu";
  font-size: 1em;
}

input[type="color"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
input:not([type]),
textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  margin-bottom: 0.75em;
  padding: 0.5em;
  -webkit-transition: border-color 150ms ease;
  transition: border-color 150ms ease;
  width: 100%;
}

input[type="color"]:hover,
input[type="date"]:hover,
input[type="datetime"]:hover,
input[type="datetime-local"]:hover,
input[type="email"]:hover,
input[type="month"]:hover,
input[type="number"]:hover,
input[type="password"]:hover,
input[type="search"]:hover,
input[type="tel"]:hover,
input[type="text"]:hover,
input[type="time"]:hover,
input[type="url"]:hover,
input[type="week"]:hover,
input:not([type]):hover,
textarea:hover {
  border-color: #b1b1b1;
}

input[type="color"]:focus,
input[type="date"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="email"]:focus,
input[type="month"]:focus,
input[type="number"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="text"]:focus,
input[type="time"]:focus,
input[type="url"]:focus,
input[type="week"]:focus,
input:not([type]):focus,
textarea:focus {
  border-color: #1565c0;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(18, 89, 169, 0.7);
  outline: none;
}

input[type="color"]:disabled,
input[type="date"]:disabled,
input[type="datetime"]:disabled,
input[type="datetime-local"]:disabled,
input[type="email"]:disabled,
input[type="month"]:disabled,
input[type="number"]:disabled,
input[type="password"]:disabled,
input[type="search"]:disabled,
input[type="tel"]:disabled,
input[type="text"]:disabled,
input[type="time"]:disabled,
input[type="url"]:disabled,
input[type="week"]:disabled,
input:not([type]):disabled,
textarea:disabled {
  background-color: #f2f2f2;
  cursor: not-allowed;
}

input[type="color"]:disabled:hover,
input[type="date"]:disabled:hover,
input[type="datetime"]:disabled:hover,
input[type="datetime-local"]:disabled:hover,
input[type="email"]:disabled:hover,
input[type="month"]:disabled:hover,
input[type="number"]:disabled:hover,
input[type="password"]:disabled:hover,
input[type="search"]:disabled:hover,
input[type="tel"]:disabled:hover,
input[type="text"]:disabled:hover,
input[type="time"]:disabled:hover,
input[type="url"]:disabled:hover,
input[type="week"]:disabled:hover,
input:not([type]):disabled:hover,
textarea:disabled:hover {
  border: 1px solid #ddd;
}

input[type="color"]::-webkit-input-placeholder,
input[type="date"]::-webkit-input-placeholder,
input[type="datetime"]::-webkit-input-placeholder,
input[type="datetime-local"]::-webkit-input-placeholder,
input[type="email"]::-webkit-input-placeholder,
input[type="month"]::-webkit-input-placeholder,
input[type="number"]::-webkit-input-placeholder,
input[type="password"]::-webkit-input-placeholder,
input[type="search"]::-webkit-input-placeholder,
input[type="tel"]::-webkit-input-placeholder,
input[type="text"]::-webkit-input-placeholder,
input[type="time"]::-webkit-input-placeholder,
input[type="url"]::-webkit-input-placeholder,
input[type="week"]::-webkit-input-placeholder,
input:not([type])::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #858585;
}

input[type="color"]::-moz-placeholder,
input[type="date"]::-moz-placeholder,
input[type="datetime"]::-moz-placeholder,
input[type="datetime-local"]::-moz-placeholder,
input[type="email"]::-moz-placeholder,
input[type="month"]::-moz-placeholder,
input[type="number"]::-moz-placeholder,
input[type="password"]::-moz-placeholder,
input[type="search"]::-moz-placeholder,
input[type="tel"]::-moz-placeholder,
input[type="text"]::-moz-placeholder,
input[type="time"]::-moz-placeholder,
input[type="url"]::-moz-placeholder,
input[type="week"]::-moz-placeholder,
input:not([type])::-moz-placeholder,
textarea::-moz-placeholder {
  color: #858585;
}

input[type="color"]:-ms-input-placeholder,
input[type="date"]:-ms-input-placeholder,
input[type="datetime"]:-ms-input-placeholder,
input[type="datetime-local"]:-ms-input-placeholder,
input[type="email"]:-ms-input-placeholder,
input[type="month"]:-ms-input-placeholder,
input[type="number"]:-ms-input-placeholder,
input[type="password"]:-ms-input-placeholder,
input[type="search"]:-ms-input-placeholder,
input[type="tel"]:-ms-input-placeholder,
input[type="text"]:-ms-input-placeholder,
input[type="time"]:-ms-input-placeholder,
input[type="url"]:-ms-input-placeholder,
input[type="week"]:-ms-input-placeholder,
input:not([type]):-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #858585;
}

input[type="color"]::placeholder,
input[type="date"]::placeholder,
input[type="datetime"]::placeholder,
input[type="datetime-local"]::placeholder,
input[type="email"]::placeholder,
input[type="month"]::placeholder,
input[type="number"]::placeholder,
input[type="password"]::placeholder,
input[type="search"]::placeholder,
input[type="tel"]::placeholder,
input[type="text"]::placeholder,
input[type="time"]::placeholder,
input[type="url"]::placeholder,
input[type="week"]::placeholder,
input:not([type])::placeholder,
textarea::placeholder {
  color: #858585;
}

textarea {
  resize: vertical;
}

[type="checkbox"],
[type="radio"] {
  display: inline;
  margin-right: 0.375em;
}

[type="file"] {
  margin-bottom: 0.75em;
  width: 100%;
}

select {
  margin-bottom: 0.75em;
  width: 100%;
}

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html,
body {
  height: 100%;
}

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

dl {
  margin: 0;
}

dt {
  font-weight: 600;
  margin: 0;
}

dd {
  margin: 0;
}

figure {
  margin: 0;
}

img,
picture {
  margin: 0;
  max-width: 100%;
}

table {
  border-collapse: collapse;
  margin: 0.75em 0;
  table-layout: fixed;
  width: 100%;
}

th {
  border-bottom: 1px solid #a6a6a6;
  font-weight: 600;
  padding: 0.75em 0;
  text-align: left;
}

td {
  border-bottom: 1px solid #ddd;
  padding: 0.75em 0;
}

tr,
td,
th {
  vertical-align: middle;
}

body {
  color: #333;
  font-family: "Ubuntu";
  font-size: 1em;
  line-height: 1.5;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Ubuntu";
  font-size: 1.333em;
  line-height: 1.2;
  margin: 0 0 0.75em;
}

p {
  margin: 0 0 0.75em;
}

a {
  color: #1565c0;
  text-decoration: none;
  -webkit-transition: color 150ms ease;
  transition: color 150ms ease;
}

a:active,
a:focus,
a:hover {
  color: #104c90;
}

hr {
  border-bottom: 1px solid #ddd;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin: 1.5em 0;
}

body {
  background: #f2f2f2;
  margin: 0;
}

table {
  border-bottom: 2px solid #ddd;
  font-family: "Helvetica";
  color: #999;
}

table thead td {
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 2px solid #ddd;
}

table td:first-child {
  text-indent: 10px;
}

.center {
  text-align: center;
}

.strong {
  font-weight: bold;
}

.tables {
  border-left: 1px solid #ddd !important;
}

.tables td:first-child {
  text-indent: 0px;
}

#logo {
  height: 40px;
  margin-top: 8px;
  float: left;
}

.wrapper {
  padding: 45px;
  margin-top: 60px;
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 65.88078266%;
  margin-left: 17.05960867%;
}

.wrapper:last-child {
  margin-right: 0;
}

#app nav.navbar {
  background: white;
  border-bottom: 1px solid #ddd;
  height: 60px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 999;
}

#app nav.navbar .tools {
  float: right;
}

#app nav.navbar .branding {
  float: left;
  text-transform: uppercase;
  margin-left: 15px;
}

#app nav.navbar .branding a {
  color: #9fcecc;
  font-size: 24px;
  line-height: 60px;
  margin-left: 10px;
  text-decoration: none;
  font-weight: 100;
}

.dash-module {
  background: white;
  padding: 30px;
  margin-bottom: 45px;
  border: 1px solid #ddd;
}

.dash-module h5 {
  margin-bottom: 25px;
}

.dash-module.clear {
  background: 0px transparent;
  border: transparent;
  padding: 0;
}

.dropdown {
  line-height: 1.5;
  position: relative;
  z-index: 99999;
}

.dropdown .dropdown-container {
  display: inline-block;
  position: relative;
  text-align: center;
}

.dropdown .dropdown-description {
  background: #fff;
  border-bottom: 0px solid transparent;
  border-bottom-left-radius: 3px;
  border-left: 0px solid transparent;
  border-top-left-radius: 3px;
  border-top: 0px solid transparent;
  color: #999999;
  float: left;
  font-size: 0.7em;
  line-height: 59px;
  margin: 0;
  padding: 0 0.5em 0 1em;
}

@media screen and (min-width: 900px) {
  .dropdown .dropdown-description {
    font-size: 1em;
  }
}

.dropdown .dropdown-button {
  background: #fff;
  border-bottom: 0px solid transparent;
  border-bottom-right-radius: 3px;
  border-right: 0px solid transparent;
  border-top: 0px solid transparent;
  border-top-right-radius: 3px;
  cursor: pointer;
  float: right;
  font-size: 0.7em;
  line-height: 59px;
  margin: 0;
  padding: 0 2.5em 0 0.5em;
  position: relative;
}

@media screen and (min-width: 900px) {
  .dropdown .dropdown-button {
    font-size: 1em;
    padding: 0 2.5em 0 0.5em;
  }
}

.dropdown .dropdown-button:hover {
  background-color: #f7f7f7;
}

.dropdown .dropdown-button::after {
  color: #333;
  content: "\25BE";
  display: block;
  position: absolute;
  right: 1em;
  top: 0;
}

.dropdown .dropdown-menu {
  background: #fff;
  border: 0px solid transparent;
  border-radius: 3px;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
  color: #333;
  cursor: pointer;
  display: none;
  margin: 0;
  overflow: show;
  padding: 0;
  position: absolute;
  right: 0;
  top: 50px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  width: 228px;
  z-index: 99999;
}

.dropdown .dropdown-menu::before {
  position: absolute;
  top: 0;
  right: 1em;
  bottom: 0;
  left: 0;
  color: #fff;
  content: "\25B2";
  font-size: 1.4em;
  pointer-events: none;
  text-shadow: 0 -2px 2px rgba(0, 0, 0, 0.3);
  top: -0.7em;
}

.dropdown .dropdown-menu li {
  border-bottom: 1px solid transparent;
  color: #333;
  list-style: none;
  padding: 0.5em;
  position: relative;
}

.dropdown .dropdown-menu li:hover {
  background: #f7f7f7;
}

.dropdown .dropdown-menu li:first-child {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}

.dropdown .dropdown-menu li:last-child {
  border: 0;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}

.dropdown .show-menu {
  display: block;
}

.device-background {
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains.png"), -webkit-linear-gradient(80deg, #0A120D, #162C4C), no-repeat #162C4C scroll;
  background: url("https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains.png"), linear-gradient(10deg, #0A120D, #162C4C), no-repeat #162C4C scroll;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 20em;
  width: 100%;
}

.device-background .device-text {
  padding: 2em;
}

@media screen and (min-width: 900px) {
  .device-background .device-text {
    float: left;
    max-width: 50%;
    padding: 4em;
  }
}

.device-background .device-text h4 {
  border-bottom: 1px solid rgba(255, 255, 255, 0.3);
  color: white;
  font-size: 1.5em;
  margin: 0 0 0.5em 0;
  padding-bottom: 0.5em;
}

.device-background .device-text p {
  color: white;
  line-height: 1.5em;
  margin-bottom: 1.5em;
}

.device-background .device {
  display: none;
  position: relative;
  z-index: 888;
}

@media screen and (min-width: 900px) {
  .device-background .device {
    background: #1a1a1a;
    border-radius: 2em;
    box-shadow: 1px 0 #343434, 4px 0 #060606, 7px 0 #010101, 10px 0 #010101, 13px 0 #010101;
    display: block;
    float: right;
    margin-bottom: -12em;
    margin-right: 5em;
    padding: 3em 0;
    -webkit-transform: perspective(800px) translateX(0) translateY(-100px) translateZ(-50px) rotateX(0) rotateY(-20deg) rotateZ(0);
            transform: perspective(800px) translateX(0) translateY(-100px) translateZ(-50px) rotateX(0) rotateY(-20deg) rotateZ(0);
    width: 10.8em;
  }

  .device-background .device .screen {
    height: 18em;
    width: 10em;
    background-image: url("/images/screen.jpg");
    background-size: cover;
    border-radius: 0.2em;
    box-shadow: inset 0 1px 8px rgba(0, 0, 0, 0.5);
    margin: auto;
  }
}

.cards {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-left: -16px;
  margin-right: -16px;
}

.card {
  padding: 25px;
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: 0 2px 4px #e6e6e6;
  -ms-flex-preferred-size: 15em;
      flex-basis: 15em;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  margin: 0 1em 1.5em 1em;
  position: relative;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.card::after {
  clear: both;
  content: "";
  display: block;
}

.card.new,
.card.edit {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 97%;
          flex: 0 0 97%;
}

.card.new .name,
.card.edit .name {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 31.76156532%;
}

.card.new .name:last-child,
.card.edit .name:last-child {
  margin-right: 0;
}

.card.new .dosage,
.card.edit .dosage {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 14.70195665%;
}

.card.new .dosage:last-child,
.card.edit .dosage:last-child {
  margin-right: 0;
}

.card.new .field,
.card.edit .field {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 14.70195665%;
}

.card.new .field:last-child,
.card.edit .field:last-child {
  margin-right: 0;
}

.card.new .dosage_qty,
.card.edit .dosage_qty {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 14.70195665%;
}

.card.new .dosage_qty:last-child,
.card.edit .dosage_qty:last-child {
  margin-right: 0;
}

.card.new .controls,
.card.edit .controls {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 100%;
  text-align: right;
}

.card.new .controls:last-child,
.card.edit .controls:last-child {
  margin-right: 0;
}

.card.new .units,
.card.edit .units {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 6.17215231%;
}

.card.new .units:last-child,
.card.edit .units:last-child {
  margin-right: 0;
}

.card.edit .card-edit {
  display: block;
}

.card.edit .card-display {
  display: none;
}

.card .card-edit {
  display: none;
}

.card > i {
  font-size: 18px;
  color: #ddd;
  position: absolute;
  top: 12px;
  right: 12px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

.card > i:hover {
  color: #333;
}

.card .card-image {
  background-color: #F8F2B4;
  height: 150px;
  max-height: 150px;
  overflow: hidden;
}

.card .card-image img {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  opacity: 1;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  width: 100%;
}

.card .card-header {
  background-color: white;
  border-bottom: 1px solid #ddd;
  border-radius: 3px 3px 0 0;
  font-weight: bold;
  line-height: 1.5em;
  padding: 0.5em 0.75em;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.card .card-copy {
  font-size: 0.9em;
  line-height: 1.5em;
  padding: 0.75em 0;
}

.card .card-copy p {
  margin: 0 0 0.75em;
}

.card .card-copy form {
  margin-top: 25px;
}

.card:focus img,
.card:hover img {
  opacity: 1;
}

.card:active {
  background-color: white;
}

.card:active .card-header {
  background-color: white;
}

.tables {
  border: 1px solid #ddd;
  border-collapse: separate;
  border-left: 0;
  border-radius: 3px;
  border-spacing: 0;
  width: 100%;
}

.tables tbody {
  background-color: #fcfcfc;
}

.tables tbody tr:hover > td,
.tables tbody tr:hover > th {
  background-color: #efefef;
}

.tables tbody tr:nth-child(even) {
  background-color: #f7f7f7;
}

.tables tbody tr:nth-child(even):hover > td {
  background-color: #eaeaea;
}

.tables thead:first-of-type tr:first-child > th:first-child {
  border-top-left-radius: 3px;
}

.tables thead:first-of-type tr:first-child > th:last-child {
  border-top-right-radius: 3px;
}

.tables tbody:last-child tr:last-child > td:first-child {
  border-bottom-left-radius: 3px;
}

.tables tbody:last-child tr:last-child > td:last-child {
  border-bottom-right-radius: 3px;
}

.tables thead th {
  background-color: white;
  border-bottom: 0;
  border-left: 1px solid #ddd;
  padding: 0.75em 1em;
  text-align: left;
}

.tables thead th:first-child {
  border-left: 0;
}

.tables tbody {
  background-color: #fcfcfc;
}

.tables tbody td {
  border-bottom: 0;
  border-left: 1px solid #ddd;
  border-top: 1px solid #ddd;
  padding: 0.75em 1em;
}

.tables tbody td:first-child {
  border-left: 0;
}

.tables tbody td button {
  display: inline-block;
  font-size: 0.7em;
  line-height: 1.5;
  margin-bottom: 0.3em;
  margin-right: 0.5em;
  outline: none;
  padding: 0.3em 1em;
  width: 100%;
}

@media screen and (min-width: 600px) {
  .tables tbody td button {
    margin-bottom: 0;
    width: auto;
  }
}

.badge-alert {
  background-color: #fff6bf;
  border-radius: 5em;
  color: #bfa400;
  display: inline-block;
  font-size: 1em;
  line-height: 2;
  padding: 0.4em 1.2em;
  font-weight: bold;
}

.badge-default {
  background-color: #ddd;
  border-radius: 5em;
  color: #5e5e5e;
  display: inline-block;
  font-size: 1em;
  line-height: 2;
  padding: 0.4em 1.2em;
  font-weight: bold;
}

.badge-error {
  background-color: #fbe3e4;
  border-radius: 5em;
  color: #c31c23;
  display: inline-block;
  font-size: 1em;
  line-height: 2;
  padding: 0.4em 1.2em;
  font-weight: bold;
}

.badge-notice {
  background-color: #e5edf8;
  border-radius: 5em;
  color: #2f65af;
  display: inline-block;
  font-size: 1em;
  line-height: 2;
  padding: 0.4em 1.2em;
  font-weight: bold;
}

.badge-success {
  background-color: #e6efc2;
  border-radius: 5em;
  color: #788d25;
  display: inline-block;
  font-size: 1em;
  line-height: 2;
  padding: 0.4em 1.2em;
  font-weight: bold;
}

.dash-recent-activity,
.dash-dna {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 48.82117399%;
}

.dash-recent-activity:last-child,
.dash-dna:last-child {
  margin-right: 0;
}

.dash-recent-activity:nth-child(2n),
.dash-dna:nth-child(2n) {
  margin-right: 0;
}

.dash-recent-activity:nth-child(2n+1),
.dash-dna:nth-child(2n+1) {
  clear: left;
}

.dash-full-activity {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 100%;
}

.dash-full-activity::after {
  clear: both;
  content: "";
  display: block;
}

.dash-full-activity:last-child {
  margin-right: 0;
}

.dash-tags {
  float: left;
  display: block;
  margin-right: 2.35765202%;
  width: 100%;
}

.dash-tags::after {
  clear: both;
  content: "";
  display: block;
}

.dash-tags:last-child {
  margin-right: 0;
}

.dash-tags .dash-header {
  margin-bottom: 30px;
}

.dash-tags .dash-header::after {
  clear: both;
  content: "";
  display: block;
}

.dash-tags .dash-header h5 {
  float: left;
  margin-bottom: 0;
  line-height: 46px;
}

.dash-tags .dash-header #add_tag {
  float: right;
}

.device-background {
  margin-top: 80px;
  margin-bottom: 80px;
}

.device-background .device {
  margin-top: 60px;
}

/*# sourceMappingURL=data:application/json;base64, */
